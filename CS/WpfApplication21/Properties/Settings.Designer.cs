// Developer Express Code Central Example:
// GridControl - How to bind Master and Detail focused rows to ViewModel objects to follow the MVVM pattern in your application
// 
// This example demonstrates how to use ViewModel properties to track and control
// focused row changes both for Master and Detail grids. This capability is
// achieved by creating attached behavior that handles all necessary events
// (especially for the focused view and row changing, both in the detail and master
// grids). The logic of focusing rows can be changed inside this behavior depending
// on your requirements. For example, you may want not to focus the first detail
// row when a master row is expanded. If so, change the MasterRowExpanded event
// handler as follows:
// void MasterGridMasterRowExpanded(object sender,
// RowEventArgs e)
// {  (MasterGrid.GetDetail(MasterView.FocusedRowHandle) as
// GridControl).View.FocusedRow = null;
// }
// So, the main idea of the example is to
// show how the row focusing logic can be defined in the GridControl that operates
// in Master-Detail mode.
// Note that the approach shown in the example will work
// only with the DataControlDetailDescriptor, as other descriptors use custom
// templates to display detail content that is not synchronized with the master
// grid.
// 
// You can find sample updates and versions for different programming languages here:
// http://www.devexpress.com/example=E4402

// Developer Express Code Central Example:
// Expanding and collapsing master rows
// 
// This sample shows you a few members that allow to expand and collapse master
// rows. Keyboard presses are processed to allow the CTRL+* shortcut to toggle the
// currently focused master row's state. There are also two buttons - one allowing
// to expand all master rows, and another that collapses details for all but the
// focused row.
// 
// You can find sample updates and versions for different programming languages here:
// http://www.devexpress.com/example=E4044

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApplication21.Properties
{


    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
