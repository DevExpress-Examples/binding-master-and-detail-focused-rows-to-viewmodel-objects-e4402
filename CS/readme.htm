
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title>GridControl - How to bind Master and Detail focused rows to ViewModel objects to follow the MVVM pattern in your application - Developer Express Example</title>
<style>
html, body, form 
{
	font-family: Tahoma, Arial, Verdana;
    font-size: small;
    color: #303440;
}
h1 {
	font-size: 125%;
	font-weight: normal;
	color: Black;
	letter-spacing: 101%;
}
</style>
</head>
<body>
<h1>Developer Express Example<br />GridControl - How to bind Master and Detail focused rows to ViewModel objects to follow the MVVM pattern in your application</h1>
<p>
This example demonstrates how to use ViewModel properties to track and control focused row changes both for Master and Detail grids. This capability is achieved by creating attached behavior that handles all necessary events (especially for the focused view and row changing, both in the detail and master grids). The logic of focusing rows can be changed inside this behavior depending on your requirements. For example, you may want not to focus the first detail row when a master row is expanded.  If so, change the MasterRowExpanded event handler as follows:
void MasterGridMasterRowExpanded(object sender, RowEventArgs e)
{
    (MasterGrid.GetDetail(MasterView.FocusedRowHandle) as GridControl).View.FocusedRow = null;
}
So, the main idea of the example is to show how the row focusing logic can be defined in the GridControl that operates in Master-Detail mode.
Note that the approach shown in the example will work only with the DataControlDetailDescriptor, as other descriptors use custom templates to display detail content that is not synchronized with the master grid.</p>
<p>You can find sample updates and versions for different programming languages here:<br /><a href="http://www.devexpress.com/example=E4402">http://www.devexpress.com/example=E4402</a>.</p>
</body>
</html>